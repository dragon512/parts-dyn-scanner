#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------
FROM ubuntu:bionic

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# This Dockerfile adds a non-root 'vscode' user with sudo access. However, for Linux,
# this user's GID/UID must match your local user UID/GID to avoid permission issues
# with bind mounts. Update USER_UID / USER_GID if yours is not 1000. See
# https://aka.ms/vscode-remote/containers/non-root-user for details.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Configure apt and install packages
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
    #
    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
    && apt-get -y install git iproute2 procps lsb-release python3-venv gcc g++ g++-multilib rpm cmake xsltproc libexpat1-dev docbook-xsl autoconf automake libtool bison flex autotools-dev libpcre3-dev libcap-dev libhwloc-dev libncurses5-dev zlib1g-dev libsigsegv2 libc-ares-dev libextutils-makemaker-cpanfile-perl libidn11-dev libjson-c-dev libcppunit-dev libreadline-dev patchelf \
    #
    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
    && groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    # [Optional] Add sudo support for the non-root user
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    #
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
    # add pip setup in user directory

USER $USERNAME
#ENV LC_ALL=en_US.utf8
#ENV LANG=en_US.utf8
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENV PATH=/home/$USERNAME/myenv/bin:$PATH

RUN python3 -m venv /home/$USERNAME/myenv \
    && pip install pip --upgrade \
    && pip install scons-parts



# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=